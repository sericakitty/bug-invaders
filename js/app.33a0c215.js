(function(){"use strict";var e={2329:function(e,t,i){var s=i(9199);const a={class:"footerfixer"},h=(0,s._)("div",{id:"header"},[(0,s._)("h1",null,"Bug Invaders"),(0,s._)("div",{class:"sourcecode"},[(0,s._)("a",{href:"https://github.com/sericakitty/bug-invaders",class:"sourcecodelink",target:"_blank"},"Source code link")])],-1);function n(e,t,i,n,r,l){const o=(0,s.up)("TheNavBar"),d=(0,s.up)("PageGame"),g=(0,s.up)("TheFooter");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(o),(0,s._)("main",a,[h,(0,s.Wm)(d)]),(0,s.Wm)(g)],64)}const r=(0,s._)("ul",{class:"nav justify-content-center navbar"},[(0,s._)("li",{class:"nav-item"},[(0,s._)("a",{class:"nav-link navtext",href:"https://sericakitty.github.io/"},"Home")])],-1),l=[r];function o(e,t){return(0,s.wg)(),(0,s.iD)("nav",null,l)}var d=i(89);const g={},c=(0,d.Z)(g,[["render",o]]);var m=c;const u={class:"footer"};function p(e,t,i,a,h,n){return(0,s.wg)(),(0,s.iD)("section",null,[(0,s._)("footer",u,[t[0]||((0,s.qZ)(-1),t[0]=(0,s._)("div",null,[(0,s.Uk)("Â© 2020 - "+(0,s.zw)(h.year)+" sericakitty.github.io. All Rights Reserved.",1)]),(0,s.qZ)(1),t[0])])])}var f={data(){return{year:(0,s.Fl)((()=>Intl.DateTimeFormat(navigator.language,{year:"numeric"}).format(new Date)))}}};const y=(0,d.Z)(f,[["render",p]]);var v=y;const S=(0,s._)("div",{class:"container"},[(0,s._)("div",{class:"gamecenteringcontainer",id:"game"})],-1),b=[S];function x(e,t,i,a,h,n){return(0,s.wg)(),(0,s.iD)("section",null,b)}var w=i(3836),P=i.n(w),L=i.p+"img/bug1.77c4df08.png",E=i.p+"img/bug2.55b99de9.png",O=i.p+"img/bug3.ae53a725.png",k=i.p+"img/bugPellet.c0a40047.png",T=i.p+"img/bugRepellent.d0bb06f7.png",z=i.p+"img/codey.7215ad41.png",A=i.p+"img/platform.197f5773.png";class C extends w.Scene{constructor(e){super(e),this.levelKey=e,this.gameState={active:!1,enemySpeed:{bug1:1,bug2:2,bug3:3},bulletTime:0,scoreText:""}}init(){console.log(`this is ${this.levelKey}`)}preload(){this.load.image("bug1",L),this.load.image("bug2",E),this.load.image("bug3",O),this.load.image("codey",z),this.load.image("platform",A),this.load.image("bugPellet",k),this.load.image("bugRepellent",T),this.width=this.game.canvas.width,this.height=this.game.canvas.height,this.ratio=this.width/this.height}resizeWold(){this.gameState.bug1&&(this.gameState.bug1.scale=this.ratio),this.gameState.bug2&&(this.gameState.bug2.scale=this.ratio),this.gameState.bug3&&(this.gameState.bug3.scale=this.ratio),this.gameState.player&&(this.gameState.player.scale=this.ratio),this.gameState.bugPellet&&(this.gameState.bugPellet.scale=this.ratio),this.gameState.platform&&(this.gameState.platform.setDisplaySize=this.width)}numOfTotalEnemies(){const e=this.gameState.enemies.getChildren().length;return e}createPlatform(){const e=this.physics.add.staticGroup();e.create(0,.95*this.height,"platform").setOrigin(0,-.2).setScale(2.15,.5).refreshBody(),this.gameState.platform=e}createPlayer(){this.gameState.player=this.physics.add.sprite(.5*this.width,.9*this.height,"codey").setScale(.75)}createEnemies(){this.gameState.enemies=this.physics.add.group();for(let e=1;e<=this.gameState.numOfEnemiesPerYLine;e+=1)for(let t=1;t<2*this.gameState.numOfEnemiesPerXLine;t+=1.5){const i=Math.floor(Math.random()*this.gameState.enemyGroups.length);this.gameState.enemies.create(50*t,50*e,this.gameState.enemyGroups[i]).setScale(.5).setGravityY(-200)}this.gameState.enemies.getChildren().forEach((e=>{e.name=e.texture.key,e.speed=this.gameState.enemySpeed[e.name]}))}createColliderPlayerAndPlatform(){this.gameState.player.setCollideWorldBounds(!0),this.physics.add.collider(this.gameState.player,this.gameState.platform)}createEnemiesPellets(){this.gameState.enemiesPellets=this.physics.add.group()}createRepellets(){this.gameState.bugRepellent=this.physics.add.group(),this.gameState.bugRepellent.createMultiple(10,"bugRepellent")}createLevelText(){this.gameState.levelText=this.add.text(.475*this.width,.02*this.height,this.levelKey,{fontSize:"20px",fill:"#000000"})}createScoreText(){this.gameState.scoreText=this.add.text(.45*this.width,.97*this.height,`Bugs Left: ${this.numOfTotalEnemies()}`,{fontSize:"15px",fill:"#000000"})}createCursors(){this.gameState.cursors=this.input.keyboard.createCursorKeys()}generateEnemiesPellets(){const e=w.Utils.Array.GetRandom(this.gameState.enemies.getChildren());null!==e&&this.gameState.enemiesPellets.create(e.x,e.y,"bugPellet")}fireEnemyPellets(){this.gameState.enemiesPelletsLoop=this.time.addEvent({delay:500,callback:this.generateEnemiesPellets,callbackScope:this,loop:!0})}destroyEnemyPellets(){this.physics.add.collider(this.gameState.enemiesPellets,this.gameState.platform,(e=>{e.destroy()}))}destroyEnemy(){this.physics.add.collider(this.gameState.enemies,this.gameState.bugRepellent,((e,t)=>{e.destroy(),t.destroy(),this.gameState.scoreText.setText(`Bugs Left: ${this.numOfTotalEnemies()}`)}))}sortedEnemies(){const e=this.gameState.enemies.getChildren().sort(((e,t)=>e.x-t.x));return e}moveEnemy(){this.gameState.enemies.getChildren().forEach((e=>{e.x+=e.speed,e.x<=20&&(e.speed*=-1,e.y+=20),e.x>=this.width-20&&(e.speed*=-1,e.y+=20)}))}fireRepellets(){this.gameState.bugRepellent.create(this.gameState.player.x,this.gameState.player.y,"bugRepellent").setGravityY(-500)}cursorActions(){this.gameState.cursors.left.isDown?this.gameState.player.setVelocityX(-160):this.gameState.cursors.right.isDown?this.gameState.player.setVelocityX(160):this.gameState.player.setVelocityX(0),w.Input.Keyboard.JustDown(this.gameState.cursors.space)&&this.fireRepellets()}gameOver(){const e=()=>{this.gameState.active=!1,this.physics.pause(),this.gameState.enemyVelocity=1,this.add.text(.5*this.width,.5*this.height,"Game Over!",{fontSize:"25px",fill:"#000000"}).setOrigin(),this.add.text(.5*this.width,.55*this.height,"Click to restart",{fontSize:"25px",fill:"#000000"}).setOrigin()};this.physics.add.collider(this.gameState.enemiesPellets,this.gameState.player,(()=>{this.gameState.enemiesPelletsLoop.destroy(),e()})),this.physics.add.collider(this.gameState.enemies,this.gameState.player,(()=>{e()}))}resetLevel(){this.scene.stop(this.levelKey),this.scene.start(this.levelKey)}levelWin(){0===this.numOfTotalEnemies()&&(this.gameState.active=!1,this.physics.pause(),this.gameState.enemyVelocity=1,this.add.text(.5*this.width,.5*this.height,`You won the ${this.levelKey}!`,{fontSize:"25px",fill:"#000000"}).setOrigin(),this.add.text(.5*this.width,.55*this.height,`Click to start ${this.nextLevel}`,{fontSize:"25px",fill:"#000000"}).setOrigin(),this.goNextLevel())}goNextLevel(){this.input.on("pointerup",(()=>{this.scene.stop(this.levelKey),this.scene.start(this.nextLevel)}))}levelSetup(){this.gameState.active=!0,this.createPlatform(),this.createPlayer(),this.createEnemies(),this.createColliderPlayerAndPlatform(),this.createEnemiesPellets(),this.createRepellets(),this.createScoreText(),this.createLevelText(),this.createCursors()}create(){this.input.on("pointerup",(()=>{this.gameState.active||this.resetLevel()})),this.levelSetup(),this.fireEnemyPellets(),this.destroyEnemyPellets(),this.destroyEnemy(),this.gameOver()}update(){this.resizeWold(),this.gameState.active&&(this.cursorActions(),this.levelWin(),this.moveEnemy())}}const _=C;var R=_;class G extends R{constructor(){super({key:"Main Menu"}),this.key="Main Menu",this.nextLevel="Level 1"}init(){console.log(`This is ${this.key}`)}create(){this.add.text(.35*this.width,.2*this.height,"Bug Invaders",{fill:"#d660ff",fontSize:"30px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.add.image(.25*this.width,.5*this.height,"bug1").scale=this.ratio,this.add.image(.5*this.width,.33*this.height,"bug2").scale=this.ratio,this.add.image(.75*this.width,.5*this.height,"bug3").scale=this.ratio,this.add.image(.5*this.width,.94*this.height,"codey").scale=this.ratio,this.add.image(.5*this.width,.99*this.height,"platform").setDisplaySize(this.width,15),this.add.triangle(.5*this.width,.5*this.height,0,100,100,50,0,0,14974975).scale=this.ratio,this.add.text(.3*this.width,.5*this.height,"Click to start!",{fill:"#000000",fontSize:"30px"}).scale=this.ratio,this.add.text(.3*this.width,.65*this.height,"Move with arrow keys",{fill:"#000000",fontSize:"25px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.add.text(.3*this.width,.7*this.height,"Shoot with spacebar",{fill:"#000000",fontSize:"25px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.add.text(.3*this.width,.75*this.height,"Kill all invaders and do",{fill:"#000000",fontSize:"25px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.add.text(.3*this.width,.8*this.height,"not let them reach you",{fill:"#000000",fontSize:"25px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.goNextLevel()}update(){}}const M=G;var V=M;class D extends R{constructor(){super("Level 1"),this.gameState.enemyGroups=["bug1"],this.gameState.numOfEnemiesPerXLine=5,this.gameState.numOfEnemiesPerYLine=1,this.nextLevel="Level 2"}}const B=D;var H=B;class K extends R{constructor(){super("Level 2"),this.gameState.enemyGroups=["bug2"],this.gameState.numOfEnemiesPerXLine=5,this.gameState.numOfEnemiesPerYLine=2,this.nextLevel="Level 3"}}const W=K;var j=W;class Y extends R{constructor(){super("Level 3"),this.gameState.enemyGroups=["bug3"],this.gameState.numOfEnemiesPerXLine=5,this.gameState.numOfEnemiesPerYLine=3,this.nextLevel="Level Bonus"}}const N=Y;var X=N;class $ extends R{constructor(){super("Level Bonus"),this.gameState.enemyGroups=["bug1","bug2","bug3"],this.gameState.numOfEnemiesPerXLine=5,this.gameState.numOfEnemiesPerYLine=4,this.nextLevel="End Menu"}}const Z=$;var F=Z;class I extends R{constructor(){super({key:"End Menu"}),this.nextLevel="Level 1"}init(){console.log(`This is ${this.key}`)}create(){this.add.text(.35*this.width,.2*this.height,"Bug Invaders",{fill:"#d660ff",fontSize:"30px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.add.image(.25*this.width,.5*this.height,"bug1").scale=this.ratio,this.add.image(.5*this.width,.33*this.height,"bug2").scale=this.ratio,this.add.image(.75*this.width,.5*this.height,"bug3").scale=this.ratio,this.add.image(.5*this.width,.94*this.height,"codey").scale=this.ratio,this.add.image(.5*this.width,.99*this.height,"platform").setDisplaySize(this.width,15),this.add.triangle(.5*this.width,.5*this.height,0,100,100,50,0,0,14974975).scale=this.ratio,this.add.text(.25*this.width,.6*this.height,"Thank you for playing!",{fill:"#000000",fontSize:"30px"}).scale=this.ratio,this.add.text(.35*this.width,.75*this.height,"Click for",{fill:"#000000",fontSize:"25px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.add.text(.35*this.width,.8*this.height,"play again!",{fill:"#000000",fontSize:"25px",boundsAlignH:"center",boundsAlignV:"middle"}).scale=this.ratio,this.goNextLevel()}}const q=I;var U=q,J={type:P().Canvas,backgroundColor:"b9eaff",scale:{mode:P().Scale.NONE,width:window.innerWidth<=320?290:window.innerWidth<=425?390:490,height:650},fps:{target:60},parent:"game",physics:{default:"arcade",arcade:{gravity:{y:200},debug:!1}},scene:[V,H,j,X,F,U]};const Q=J;var ee=Q,te={mounted(){this.initializePhaser()},methods:{initializePhaser(){const e=ee;new w.Game(e)}}};const ie=(0,d.Z)(te,[["render",x]]);var se=ie,ae={name:"App",components:{TheNavBar:m,TheFooter:v,PageGame:se}};const he=(0,d.Z)(ae,[["render",n]]);var ne=he;(0,s.ri)(ne).mount("#app")}},t={};function i(s){var a=t[s];if(void 0!==a)return a.exports;var h=t[s]={exports:{}};return e[s].call(h.exports,h,h.exports,i),h.exports}i.m=e,function(){var e=[];i.O=function(t,s,a,h){if(!s){var n=1/0;for(d=0;d<e.length;d++){s=e[d][0],a=e[d][1],h=e[d][2];for(var r=!0,l=0;l<s.length;l++)(!1&h||n>=h)&&Object.keys(i.O).every((function(e){return i.O[e](s[l])}))?s.splice(l--,1):(r=!1,h<n&&(n=h));if(r){e.splice(d--,1);var o=a();void 0!==o&&(t=o)}}return t}h=h||0;for(var d=e.length;d>0&&e[d-1][2]>h;d--)e[d]=e[d-1];e[d]=[s,a,h]}}(),function(){i.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return i.d(t,{a:t}),t}}(),function(){i.d=function(e,t){for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})}}(),function(){i.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){i.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){i.p="/bug-invaders/"}(),function(){var e={143:0};i.O.j=function(t){return 0===e[t]};var t=function(t,s){var a,h,n=s[0],r=s[1],l=s[2],o=0;if(n.some((function(t){return 0!==e[t]}))){for(a in r)i.o(r,a)&&(i.m[a]=r[a]);if(l)var d=l(i)}for(t&&t(s);o<n.length;o++)h=n[o],i.o(e,h)&&e[h]&&e[h][0](),e[h]=0;return i.O(d)},s=self["webpackChunkbug_invaders"]=self["webpackChunkbug_invaders"]||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))}();var s=i.O(void 0,[998],(function(){return i(2329)}));s=i.O(s)})();
//# sourceMappingURL=app.33a0c215.js.map